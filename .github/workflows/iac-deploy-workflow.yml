name: IAC Deploy workflow

on: 
  push:
    branches:
      - main
      - develop
    paths:
      - 'templates/**'
  workflow_dispatch:

env:
  TEMPLATES_DIR: ./templates

jobs:
  deploy_iac:
    if: ${{ github.ref_name == 'main' || github.ref_name == 'develop' }}
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.3.7'

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{ "clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}" }'

      - name: Terraform Init
        working-directory: ${{ env.TEMPLATES_DIR }}
        run: |
          terraform init \
            -backend-config="use_azuread_auth=true" \
            -backend-config="client_id=${{ secrets.AZURE_CLIENT_ID }}" \
            -backend-config="client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
            -backend-config="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
            -backend-config="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
            -backend-config="resource_group_name=${{ vars.TFSTATE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.TFSTATE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ vars.TFSTATE_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=terraform.tfstate" 
            
      - name: Terraform Workspace Select  ${{ github.ref_name }}
        working-directory: ${{ env.TEMPLATES_DIR }}
        run: |
          terraform workspace select ${{ github.ref_name }} || terraform workspace new  ${{ github.ref_name }}

      - name: Terraform Plan
        working-directory: ${{ env.TEMPLATES_DIR }}
        run: |
          terraform plan \
          -var="infix=${{ vars.INFIX }}" \
          -var="env=${{ vars.ENV_SUFFIX }}"

      - name: Terraform Apply
        working-directory: ${{ env.TEMPLATES_DIR }}
        run: |
          terraform apply \
          -auto-approve \
          -var="infix=${{ vars.INFIX }}" \
          -var="env=${{ vars.ENV_SUFFIX }}"